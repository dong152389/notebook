(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{1040:function(e,t,r){"use strict";r.r(t);var a=r(26),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"spring-整合-druid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-整合-druid"}},[e._v("#")]),e._v(" Spring 整合 Druid")]),e._v(" "),a("h2",{attrs:{id:"pom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pom"}},[e._v("#")]),e._v(" POM")]),e._v(" "),a("p",[e._v("在 "),a("code",[e._v("pom.xml")]),e._v(" 文件中新增 "),a("code",[e._v("com.alibaba:druid")]),e._v(" 和 "),a("code",[e._v("mysql:mysql-connector-java")]),e._v(" 依赖")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<dependency>\n    <groupId>com.alibaba</groupId>\n    <artifactId>druid</artifactId>\n    <version>1.1.6</version>\n</dependency>\n<dependency>\n    <groupId>mysql</groupId>\n    <artifactId>mysql-connector-java</artifactId>\n    <version>5.1.46</version>\n</dependency>\n")])])]),a("h2",{attrs:{id:"配置数据库连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置数据库连接"}},[e._v("#")]),e._v(" 配置数据库连接")]),e._v(" "),a("p",[e._v("配置数据库连接 "),a("code",[e._v("jdbc.properties")]),e._v(" ，配置代码如下：")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# JDBC\n# MySQL 8.x: com.mysql.cj.jdbc.Driver\njdbc.driverClass=com.mysql.jdbc.Driver\njdbc.connectionURL=jdbc:mysql://192.168.75.134:3306/myshop?useUnicode=true&characterEncoding=utf-8&useSSL=false\njdbc.username=root\njdbc.password=123456\n\n# JDBC Pool\njdbc.pool.init=1\njdbc.pool.minIdle=3\njdbc.pool.maxActive=20\n\n# JDBC Test\njdbc.testSql=SELECT 'x' FROM DUAL\n")])])]),a("h2",{attrs:{id:"spring-集成-druid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-集成-druid"}},[e._v("#")]),e._v(" Spring 集成 Druid")]),e._v(" "),a("p",[e._v("创建一个名为 "),a("code",[e._v("spring-context-druid.xml")]),e._v(" 的 Spring 配置文件，内容如下：")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<?xml version="1.0" encoding="UTF-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n       xmlns:context="http://www.springframework.org/schema/context"\n       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">\n\n    \x3c!-- 加载配置属性文件 --\x3e\n    <context:property-placeholder ignore-unresolvable="true" location="classpath:jdbc.properties"/>\n\n    \x3c!-- 数据源配置, 使用 Druid 数据库连接池 --\x3e\n    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">\n        \x3c!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass --\x3e\n        <property name="driverClassName" value="${jdbc.driverClass}"/>\n\n        \x3c!-- 基本属性 url、user、password --\x3e\n        <property name="url" value="${jdbc.connectionURL}"/>\n        <property name="username" value="${jdbc.username}"/>\n        <property name="password" value="${jdbc.password}"/>\n\n        \x3c!-- 配置初始化大小、最小、最大 --\x3e\n        <property name="initialSize" value="${jdbc.pool.init}"/>\n        <property name="minIdle" value="${jdbc.pool.minIdle}"/>\n        <property name="maxActive" value="${jdbc.pool.maxActive}"/>\n\n        \x3c!-- 配置获取连接等待超时的时间 --\x3e\n        <property name="maxWait" value="60000"/>\n\n        \x3c!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --\x3e\n        <property name="timeBetweenEvictionRunsMillis" value="60000"/>\n\n        \x3c!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --\x3e\n        <property name="minEvictableIdleTimeMillis" value="300000"/>\n\n        <property name="validationQuery" value="${jdbc.testSql}"/>\n        <property name="testWhileIdle" value="true"/>\n        <property name="testOnBorrow" value="false"/>\n        <property name="testOnReturn" value="false"/>\n\n        \x3c!-- 配置监控统计拦截的filters --\x3e\n        <property name="filters" value="stat"/>\n    </bean>\n</beans>\n')])])]),a("h2",{attrs:{id:"配置-druid-监控中心"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置-druid-监控中心"}},[e._v("#")]),e._v(" 配置 Druid 监控中心")]),e._v(" "),a("p",[e._v("Druid 提供了大量的监控数据，只需要在 "),a("code",[e._v("web.xml")]),e._v(" 中配置一个 Servlet 就可以方便的查看这些信息。")]),e._v(" "),a("p",[e._v("修改 "),a("code",[e._v("web.xml")]),e._v(" 配置文件，增加 Druid 提供的 Servlet")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<servlet>\n    <servlet-name>DruidStatView</servlet-name>\n    <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>\n</servlet>\n<servlet-mapping>\n    <servlet-name>DruidStatView</servlet-name>\n    <url-pattern>/druid/*</url-pattern>\n</servlet-mapping>\n")])])]),a("p",[e._v("打开浏览器，输入：http://localhost:8080/druid/index.html 浏览器显示效果如下：")]),e._v(" "),a("p",[a("img",{attrs:{src:r(726),alt:"img"}})])])}),[],!1,null,null,null);t.default=n.exports},726:function(e,t,r){e.exports=r.p+"assets/img/Lusifer1528842755.440d107a.png"}}]);